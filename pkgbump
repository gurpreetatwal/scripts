#!/bin/bash

# Checks if the patch version number commited to package.json on the current
# branch is less than the one commmitted to master and if so bumps the package
# version by one patch number and commits it

set -o nounset
set -o errexit

print_patch() {
  awk -F '.' '/version/{print $3+0}'
}

# The file that contains the version number
FILE=${FILE:-}

ROOT="$(git rev-parse --show-toplevel)"

# If file is not set and try to find it
if [[ -z "$FILE" ]]; then
  for file in "package.json" "server/package.json"; do
    if [[ -f "$ROOT/$file" ]]; then
      FILE="$file"
      break
    fi
  done
fi

if [[ -f "$FILE" ]]; then
  echo "could not find package.json file, please check/set FILE variable"
  exit 1
fi


MASTER="$(git show origin/master:$FILE | print_patch)";
CURRENT="$(cat "$ROOT/$FILE" | print_patch)";

git fetch origin master
if [[ $MASTER -ge $CURRENT ]]; then
  perl -i -pe 's/(version": "(\d+\.)*)(\d+)(.*)/$1.($3+1).$4/e' "$ROOT/$FILE"
  git commit "$ROOT/$FILE" --no-verify -m "bump version" > /dev/null
  echo "bumped and commited patch version"
fi
