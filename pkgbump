#!/bin/bash

# Checks if the patch version number commited to package.json on the current
# branch is less than the one commmitted to master and if so bumps the package
# version by one patch number and commits it

set -o nounset
set -o errexit

print_patch() {
  awk -F '.' '/version/{print $3+0}'
}

# The file that contains the version number
FILE=${1:-}

ROOT="$(git rev-parse --show-toplevel)"

# If file is not passed in, try to find it
if [[ -z "$FILE" ]]; then
  for file in "package.json" "server/package.json"; do
    if [[ -f "$ROOT/$file" ]]; then
      FILE="$file"
      break
    fi
  done
fi

FPATH="$ROOT/$FILE"

if [[ ! -f "$FPATH" ]]; then
  if [[ -z "$FILE" ]]; then
    echo "ERROR: could not find package.json file, pass file as first argument"
  else
    echo "ERROR: $PATH is not a file"
  fi
  exit 1
fi


MASTER="$(git show origin/master:$FILE | print_patch)"
CURRENT="$(cat "$FPATH" | print_patch)"

git fetch origin master
if [[ $MASTER -ge $CURRENT ]]; then
  perl -i -pe 's/(version": "(\d+\.)*)(\d+)(.*)/$1.($3+1).$4/e' "$FPATH"
  git commit "$FPATH" --no-verify -m "bump version" > /dev/null
  echo "bumped and commited patch version"
fi
